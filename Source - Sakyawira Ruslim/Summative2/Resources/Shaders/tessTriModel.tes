#version 450 core

uniform mat4  MVP;

in vec3 tesfragPos[];
in vec3 tesfragNormal[];
in vec2 tesfragTexCoord[];
in vec4 tesFragPosLightSpace[];

out vec3 fragPos;
out vec3 fragNormal;
out vec2 fragTexCoord;
out vec4 FragPosLightSpace;

layout (triangles, equal_spacing, cw) in;

void main(void)
{ 
	fragPos = (
	gl_TessCoord.x * tesfragPos[0] + 
	gl_TessCoord.y * tesfragPos[1] + 
	gl_TessCoord.z * tesfragPos[2]);

	fragTexCoord = (
		gl_TessCoord.x * tesfragTexCoord[0] +
		gl_TessCoord.y * tesfragTexCoord[1] +
		gl_TessCoord.z * tesfragTexCoord[2]);

	fragNormal = (
		gl_TessCoord.x * tesfragNormal[0] +
		gl_TessCoord.y * tesfragNormal[1] +
		gl_TessCoord.z * tesfragNormal[2]);

	FragPosLightSpace= (
		gl_TessCoord.x * tesFragPosLightSpace[0] +
		gl_TessCoord.y * tesFragPosLightSpace[1] +
		gl_TessCoord.z * tesFragPosLightSpace[2]);


	gl_Position= MVP * 
	(gl_TessCoord.x * gl_in[0].gl_Position + gl_TessCoord.y * gl_in[1].gl_Position + gl_TessCoord.z * gl_in[2].gl_Position );
}
